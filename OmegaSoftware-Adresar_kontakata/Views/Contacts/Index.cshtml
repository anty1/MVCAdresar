@model IEnumerable<OmegaSoftware_Adresar_kontakata.Models.Contact>
@using OmegaSoftware_Adresar_kontakata.Models
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Kreiraj novi kontakt", "Create")
</p>
<script src="../../Scripts/jquery-1.8.2.min.js" type="text/javascript"></script>
@{
    var grid = new WebGrid(Model, canPage: true, rowsPerPage: 5, 
    selectionFieldName: "selectedRow",ajaxUpdateContainerId: "gridContent");
        grid.Pager(WebGridPagerModes.NextPrevious);} 
<style type="text/css">
    .webGrid { margin: 4px; border-collapse: collapse; width: 500px;  background-color:#B4CFC3;}
    .header { background-color: #C1D4E6; font-weight: bold; color: #FFF; }
    .webGrid th, .webGrid td { border: 1px solid #C0C0C0; padding: 5px; }
    .alt { background-color: #E4E9F5; color: #000; }
    .gridHead a:hover {text-decoration:underline;}
    .description { width:auto}
    .select{background-color: #71857C}
</style> 
<div id="gridContent">
    @grid.GetHtml(tableStyle: "webGrid",
            headerStyle: "header",
            alternatingRowStyle: "alt",
            selectedRowStyle: "select",
            columns: grid.Columns(
            grid.Column("Id", format: (item) => item.GetSelectLink(((int)item.ContactID).ToString())),
            grid.Column("FirstName", @Html.DisplayNameFor(model => model.FirstName).ToString()),
            grid.Column("SecondName", @Html.DisplayNameFor(model => model.SecondName).ToString()),
            grid.Column("City", @Html.DisplayNameFor(model => model.City).ToString()@*, style: "description"*@),
            grid.Column(header: "Svi Telefoni", format: (item) => @RenderNumbers(item.Numbers)),
            grid.Column(header: "", 
                format: (item) => Html.ActionLink("Edit", "Edit", new { id=item.ContactID }) +"|"+
                                  Html.ActionLink("Delete", "Delete", new { id=item.ContactID }))
     )) 
</div>
@helper RenderNumbers(List<ContactNumber> nums)
{
    var result = string.Empty;
        foreach (var item in nums)
        {
            result += item.Number + ", ";
        }
        <p>@result</p>
}

@{
    OmegaSoftware_Adresar_kontakata.Models.Contact contact = new OmegaSoftware_Adresar_kontakata.Models.Contact();
}

@if (grid.HasSelection)
{
    contact = (OmegaSoftware_Adresar_kontakata.Models.Contact)grid.Rows[grid.SelectedIndex].Value;
 <b>Id</b> @contact.ContactID<br />
 <b>Ime</b>  @contact.FirstName<br />
 <b>Prezime</b> @contact.SecondName<br />
 <b>Grad</b> @contact.City<br />
}

@*<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SecondName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Numbers)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SecondName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Numbers)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ContactID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ContactID })@
            @Html.ActionLink("Delete", "Delete", new { id=item.ContactID })
        </td>
    </tr>
}

</table>*@
